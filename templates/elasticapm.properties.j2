#
# {{ ansible_managed }}
#

## Core configurations

# A boolean specifying if the agent should be active or not. If active, the agent will instrument incoming HTTP requests
# and track errors.
{% if elastic_apm_java_agent_final_conf.active is defined %}
active={{ elastic_apm_java_agent_final_conf.active | lower }}
{% else %}
#active=
{% endif %}

# A boolean specifying if the agent should instrument the application to collect performance metrics for the app. When
# set to false, Elastic APM will not affect your application at all.
# Both active and instrument needs to be true for instrumentation to be running.
{% if elastic_apm_java_agent_final_conf.instrument is defined %}
instrument={{ elastic_apm_java_agent_final_conf.instrument | lower }}
{% else %}
#instrument=
{% endif %}

# This is used to keep all the errors and transactions of your service together and is the primary filter in the Elastic APM user interface.
# The service name must conform to this regular expression: ^[a-zA-Z0-9 _-]+$. In less regexy terms: Your service name must only contain
# characters from the ASCII alphabet, numbers, dashes, underscores and spaces.
{% if elastic_apm_java_agent_final_conf.service_name is defined %}
service_name={{ elastic_apm_java_agent_final_conf.service_name }}
{% else %}
#service_name=
{% endif %}

# A version string for the currently deployed version of the service. If you don't version your deployments, the recommended value for this
# field is the commit identifier of the deployed revision, e.g. the output of git rev-parse HEAD.
{% if elastic_apm_java_agent_final_conf.service_version is defined %}
service_version={{ elastic_apm_java_agent_final_conf.service_version }}
{% else %}
#service_version=
{% endif %}

# The name of the environment this service is deployed in, e.g. "production" or "staging".
{% if elastic_apm_java_agent_final_conf.environment is defined %}
environment={{ elastic_apm_java_agent_final_conf.environment }}
{% else %}
#environment=
{% endif %}

# By default, the agent will sample every transaction (e.g. request to your service). To reduce overhead and storage requirements, you can
# set the sample rate to a value between 0.0 and 1.0. We still record overall time and the result for unsampled transactions, but no context
# information, tags, or spans.
{% if elastic_apm_java_agent_final_conf.sample_rate is defined %}
sample_rate={{ elastic_apm_java_agent_final_conf.sample_rate }}
{% else %}
#sample_rate=
{% endif %}

# Limits the amount of spans that are recorded per transaction.
# This is helpful in cases where a transaction creates a very high amount of spans (e.g. thousands of SQL queries).
# Setting an upper limit will prevent overloading the agent and the APM server with too much work for such edge cases.
{% if elastic_apm_java_agent_final_conf.transaction_max_spans is defined %}
transaction_max_spans={{ elastic_apm_java_agent_final_conf.transaction_max_spans }}
{% else %}
#transaction_max_spans=
{% endif %}

# Sometimes it is necessary to sanitize the data sent to Elastic APM, e.g. remove sensitive data.
# Configure a list of wildcard patterns of field names which should be sanitized. These apply for example to HTTP headers and
# application/x-www-form-urlencoded data.
# Entries can have a wildcard at the beginning and at the end. Prepending an element with (?i) makes the matching case-insensitive.
# Data in the query string is considered non-sensitive, as sensitive information should not be sent in the query string.
# See https://www.owasp.org/index.php/Information_exposure_through_query_strings_in_url for more information
# Review the data captured by Elastic APM carefully to make sure it does not capture sensitive information. If you do find sensitive data in
# the Elasticsearch index, you should add an additional entry to this list (make sure to also include the default entries).
{% if elastic_apm_java_agent_final_conf.sanitize_field_names is defined %}
sanitize_field_names={{ elastic_apm_java_agent_final_conf.sanitize_field_names }}
{% else %}
#sanitize_field_names=
{% endif %}

# A list of instrumentations which should be disabled. Valid options are jdbc, servlet-api and spring-mvc.
{% if elastic_apm_java_agent_final_conf.disabled_instrumentations is defined %}
disabled_instrumentations={{ elastic_apm_java_agent_final_conf.disabled_instrumentations }}
{% else %}
#disabled_instrumentations=
{% endif %}

## HTTP configurations

# For transactions that are HTTP requests, the Java agent can optionally capture the request body (e.g. POST variables).
# Possible values: errors, transactions, all, off.
# If the request has a body and this setting is disabled, the body will be shown as [REDACTED].
# For requests with a content type of multipart/form-data, any uploaded files will be referenced in a special _files key. It contains the
# name of the field, and the name of the uploaded file, if provided.
# Request bodies often contain sensitive values like passwords, credit card numbers etc.If your service handles data like this, we advise to
# only enable this feature with care.
{% if elastic_apm_java_agent_final_conf.capture_body is defined %}
capture_body={{ elastic_apm_java_agent_final_conf.capture_body }}
{% else %}
#capture_body=
{% endif %}

# Used to restrict requests to certain URLs from being instrumented.
# This property should be set to an array containing one or more strings. When an incoming HTTP request is detected, its URL will be tested
# against each element in this list. Entries can have a wildcard at the beginning and at the end. Prepending an element with (?i) makes the
# matching case-insensitive.
# All errors that are captured during a request to an ignored URL are still sent to the APM Server regardless of this setting.
{% if elastic_apm_java_agent_final_conf.ignore_urls is defined %}
ignore_urls={{ elastic_apm_java_agent_final_conf.ignore_urls }}
{% else %}
ignore_urls=
{% endif %}

# Used to restrict requests from certain User-Agents from being instrumented.
# When an incoming HTTP request is detected, the User-Agent from the request headers will be tested against each element in this list. Entries
# can have a wildcard at the beginning and at the end. Prepending an element with (?i) makes the matching case-insensitive.
# Example: curl/*, (?i)*pingdom*
# All errors that are captured during a request by an ignored user agent are still sent to the APM Server regardless of this setting.
{% if elastic_apm_java_agent_final_conf.ignore_user_agents is defined %}
ignore_user_agents={{ elastic_apm_java_agent_final_conf.ignore_user_agents }}
{% else %}
#ignore_user_agents=
{% endif %}

## Logging configurations

# Sets the logging level for the agent.
{% if elastic_apm_java_agent_final_conf.logging_log_level is defined %}
logging.log_level={{ elastic_apm_java_agent_final_conf.logging.log_level }}
{% else %}
#logging.log_level=
{% endif %}

# Sets the path of the agent logs. The special value _AGENT_HOME_ is a placeholder for the folder the elastic-apm-agent.jar is in.
# Example: _AGENT_HOME_/logs/elastic-apm.log
# When set to the special value System.out, the logs are sent to standard out.
# When logging to a file, it's content is deleted when the application starts.
{% if elastic_apm_java_agent_final_conf.logging.log_file is defined %}
logging.log_file={{ elastic_apm_java_agent_final_conf.logging.log_file }}
{% else %}
#logging.log_file=
{% endif %}

## Reporter configurations

# This string is used to ensure that only your agents can send data to your APM server.
# Both the agents and the APM server have to be configured with the same secret token.Use if APM Server requires a token.
{% if elastic_apm_java_agent_final_conf.secret_token is defined %}
secret_token={{ elastic_apm_java_agent_final_conf.secret_token }}
{% else %}
#secret_token=
{% endif %}

# The URL must be fully qualified, including protocol (http or https) and port.
{% if elastic_apm_java_agent_final_conf.server_url is defined %}
server_url={{ elastic_apm_java_agent_final_conf.server_url }}
{% else %}
#server_url=
{% endif %}

# If a request to the APM server takes longer than the configured timeout, the request is cancelled and the event (exception or transaction)
# is discarded.
# Set to None to disable timeouts.
# If timeouts are disabled or set to a high value, your app could experience memory issues if the APM server times out.
{% if elastic_apm_java_agent_final_conf.server_timeout is defined %}
server_timeout={{ elastic_apm_java_agent_final_conf.server_timeout }}
{% else %}
#server_timeout=
{% endif %}

# By default, the agent verifies the SSL certificate if you use an HTTPS connection to the APM server.
# Verification can be disabled by changing this setting to false.
{% if elastic_apm_java_agent_final_conf.verify_server_cert is defined %}
verify_server_cert={{ elastic_apm_java_agent_final_conf.verify_server_cert | lower }}
{% else %}
#verify_server_cert=
{% endif %}

# Interval with which transactions should be sent to the APM server, in seconds.
# A lower value will increase the load on your APM server, while a higher value can increase the memory pressure on your app.
# A higher value also impacts the time until transactions are indexed and searchable in Elasticsearch.
{% if elastic_apm_java_agent_final_conf.flush_interval is defined %}
flush_interval={{ elastic_apm_java_agent_final_conf.flush_interval }}
{% else %}
#flush_interval=
{% endif %}

# Maximum queue length of transactions before sending transactions to the APM server.
# A lower value will increase the load on your APM server,while a higher value can increase the memory pressure of your app.
# A higher value also impacts the time until transactions are indexed and searchable in Elasticsearch.
# This setting is useful to limit memory consumption if you experience a sudden spike of traffic.
{% if elastic_apm_java_agent_final_conf.max_queue_size is defined %}
max_queue_size={{ elastic_apm_java_agent_final_conf.max_queue_size }}
{% else %}
#max_queue_size=
{% endif %}

# Whether each transaction should have the process arguments attached. Disabled by default to save disk space.
{% if elastic_apm_java_agent_final_conf.include_process_args is defined %}
include_process_args={{ elastic_apm_java_agent_final_conf.include_process_args | lower }}
{% else %}
#include_process_args=
{% endif %}

## Stacktrace configurations

# Used to determine whether a stack trace frame is an in-app frame or a library frame.
{% if elastic_apm_java_agent_final_conf.application_packages is defined %}
application_packages={{ elastic_apm_java_agent_final_conf.application_packages }}
{% else %}
#application_packages=
{% endif %}

# Setting it to 0 will disable stack trace collection. Any positive integer value will be used as the maximum number of frames to collect.
# Setting it -1 means that all frames will be collected.
{% if elastic_apm_java_agent_final_conf.stack_trace_limit is defined %}
stack_trace_limit={{ elastic_apm_java_agent_final_conf.stack_trace_limit }}
{% else %}
#stack_trace_limit=
{% endif %}

# In its default settings, the APM agent will collect a stack trace with every recorded span. While this is very helpful to find the exact
# place in your code that causes the span, collecting this stack trace does have some overhead. With the default setting, -1, stack traces
# will be collected for all spans. Setting it to a positive value, e.g. 5, will limit stack trace collection to spans with durations equal or
# longer than the given value in milliseconds, e.g. 5 milliseconds.
# To disable stack trace collection for spans completely, set the value to 0.
{% if elastic_apm_java_agent_final_conf.span_frames_min_duration_ms is defined %}
span_frames_min_duration_ms={{ elastic_apm_java_agent_final_conf.span_frames_min_duration_ms }}
{% else %}
#span_frames_min_duration_ms=
{% endif %}
